#index()方法是python列表中的内置方法,用于查找某个元素在列表中第一次出现的位置索引。如果元素不存在于列表中,则会引发ValueError异常。

# 示例1：查找元素在列表中第一次出现的位置索引
lst = [1, 2, 3, 4, 5, 4, 3, 2, 1]
print(lst.index(4))  # 输出4的索引位置为3

# 示例2：查找元素不存在于列表中时引发ValueError异常
lst = [1, 2, 3, 4, 5]
try:
    print(lst.index(6))
except ValueError:
    print("元素不存在于列表中")
# 输出:元素不存在于列表中

# 示例3：查找元素在列表中第一次出现的位置索引,并指定起始索引和结束索引
lst = [1, 2, 3, 4, 5, 4, 3, 2, 1]
print(lst.index(4, 2, 6))  # 输出4的索引位置为3,因为4在索引位置2到6之间第一次出现

# 示例4：查找元素在列表中第一次出现的位置索引,并指定起始索引
lst = [1, 2, 3, 4, 5, 4, 3, 2, 1]
print(lst.index(4, 2))  # 输出4的索引位置为3,因为4在索引位置2到列表末尾之间第一次出现

#基本语法
# list.index(element,start,end)
# 参数说明：
# element: 要查找的元素。
# start(可选): 起始索引，默认为0。
# end(可选): 结束索引，默认为列表长度。

#如果列表中有多个相同的元素,则只返回第一次出现的索引位置。

lst = [10, 20, 30, 20, 40]
print(lst.index(20))  # 输出: 1（不是 3）
